version: '3.9'
services:

  # Nats
  nats:
    image: nats:2.7.4
    ports:
      - "4222:4222"
      - "8222:8222"
      - "6222:6222"

  # Patient group service
  patient-group-postgres:
    image: postgres:14.2
    expose:
      - "5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-test}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-test}
      POSTGRES_DB: "patientGroup"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER:-test} -d patientGroup"
        ]
      interval: 5s
      timeout: 5s
      retries: 5

  patient-group-service:
    image: ghcr.io/fhict-s6-rb10/patient-group-service:main
    depends_on:
      patient-group-postgres:
        condition: service_healthy
      nats:
        condition: service_started
    ports:
      - "5050:80"
    environment:
      ASPNETCORE_ENVIRONMENT: Staging
      AzureAd__ClientSecret: $AzureAd__ClientSecret
      AzureAd__GraphScope: $AzureAd__GraphScope
      AzureAd__ClientId: $AzureAd__ClientId

  # Patient service
  patient-postgres:
    image: postgres:14.2
    expose:
      - "5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-test}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-test}
      POSTGRES_DB: "patient"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER:-test} -d patient"
        ]
      interval: 5s
      timeout: 5s
      retries: 5

  patient-service:
    image: ghcr.io/fhict-s6-rb10/patient-service:main
    depends_on:
      patient-postgres:
        condition: service_healthy
      nats:
        condition: service_started
    ports:
      - "5051:80"
    environment:
      ASPNETCORE_ENVIRONMENT: Staging

  # Organization service
  organization-postgres:
    image: postgres:14.2
    expose:
      - "5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-test}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-test}
      POSTGRES_DB: "organization"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER:-test} -d organization"
        ]
      interval: 5s
      timeout: 5s
      retries: 5

  organization-service:
    image: ghcr.io/fhict-s6-rb10/organization-service:main
    depends_on:
      organization-postgres:
        condition: service_healthy
      nats:
        condition: service_started
    ports:
      - "5053:80"
    environment:
      ASPNETCORE_ENVIRONMENT: Staging
      tenant: acdb33d3-0c54-4037-804d-768f633cbb6c

  # Organization dashboard    
  organization-dashboard:
    image: ghcr.io/fhict-s6-rb10/organisation-dashboard:main
    depends_on:
      organization-service:
        condition: service_started
      patient-service:
        condition: service_started
      patient-group-service:
        condition: service_started
    volumes:
      - "./conf/nginx.conf:/etc/nginx/nginx.conf"
    ports:
      - "3030:80"

  # Stress Data Service
  stress-data-service:
    image: ghcr.io/fhict-s6-rb10/stress-data-service:main
    ports:
      - "5031:80"
    environment:
      ASPNETCORE_ENVIRONMENT: Staging

  # Stress Algorithm Service
  stress-algorithm-service:
    image: ghcr.io/fhict-s6-rb10/stress-algorithm-service:master
    ports:
      - "5032:80"
    environment:
      ASPNETCORE_ENVIRONMENT: Staging

  # Feedback Service
  feedback-service:
    image: ghcr.io/fhict-s6-rb10/feedback-service:main
    ports:
      - "5033:80"
    environment:
      ASPNETCORE_ENVIRONMENT: Staging

# Caregiver Dashboard
  caregiver-dashboard:
    image: ghcr.io/fhict-s6-rb10/caregiver-dashboard:main
    ports:
      - "5034:3000"
    environment:
      ASPNETCORE_ENVIRONMENT: Staging

# join swsp
networks:
  default:
    name: swsp
